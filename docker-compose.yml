version: '3.1'

# Assumes that the persistnat vlumes have been created already (TODO)
#volumes:
#    prometheus_data:
#      external:
#        name: ${PROMETHEUS_DATA}
#    grafana_data:
#      external:
#        name: ${GRAFANA_DATA}

networks:
  webproxy:
    external:
      name: ${NETWORK}
  webservices:
    external:
      name: ${INTERNAL_NETWORK}

services:

  prometheus:
    container_name: ${PROMETHEUS} 
    image: prom/prometheus:latest
    user: ${UID}:${GID}
    hostname: ${PROMETHEUS}
    volumes:
      - ${PROMETHEUS_DATA_DIR}/conf/:/etc/prometheus/
      - ${PROMETHEUS_DATA_DIR}/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    networks:
      - webservices
    restart: always
#    deploy:
#      placement:
#        constraints:
#          - node.hostname == ${HOSTNAME}

  coinmarketcap-exporter:
    container_name: ${COINMARKETCAP_EXPORTER}
    image: cryptohub/coinmarketcap-exporter:latest
    user: ${UID}:${GID}
    hostname: ${COINMARKETCAP_EXPORTER}
    deploy:
#      placement:
#        constraints:
#          - node.hostname == ${HOSTNAME}
    ports:
        - 9101:9101
    networks:
        - webservices
    restart: always


  grafana:
    container_name: ${GRAFANA}
    image: grafana/grafana
    user: ${UID}:${GID}
    hostname: ${GRAFANA}
    depends_on:
      - ${PROMETHEUS}
     #ports:
     # - 3000:3000
    volumes:
      - ${GRAFANA_DATA_DIR}/data:/var/lib/grafana
    env_file:
      - config.monitoring
    environment:
      - VIRTUAL_HOST=tracker.cryptohub.solutions
      - VIRTUAL_PORT=3000
      - LETSENCRYPT_HOST=tracker.cryptohub.solutions
      - LETSENCRYPT_EMAIL=cyptohub.solutions@gmail.com

    networks:
      - webproxy
      - webservices
    restart: always
